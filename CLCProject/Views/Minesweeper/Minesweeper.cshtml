<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Minesweeper</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">
    <style>
        .scoreboard-container,
        .minesweeper-container,
        .rules-container {
            background-color: #fff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.1);
        }

        .grid-container {
            display: grid;
            grid-template-columns: repeat(10, 30px);
            grid-gap: 1px;
            border: 1px solid #ccc;
            width: 310px;
            height: 400px;
        }

        .cell {
            width: 30px;
            height: 39px;
            text-align: center;
            vertical-align: middle;
            line-height: 40px;
            cursor: pointer;
            border: 1px solid black;
        }

            .cell.revealed {
                background-color: #eee;
            }

            .cell.mine {
                background-color: #f00;
            }

        body {
            background-color: lightskyblue;
            font-family: Arial, sans-serif;
        }

        .neighboring-mines {
            color: blue;
            font-weight: bold;
        }

        .footer {
            position: fixed;
            bottom: 0;
            width: 100%;
            height: auto;
            line-height: 3rem;
            background-color: black;
            border-top: 1px solid #dee2e6;
            text-align: center;
        }

        .game-container {
            margin-top: 20px;
            display: flex;
            justify-content: center;
            align-items: flex-start;
        }

        .scoreboard {
            background-color: #fff;
            padding: 20px;
            margin-right: 20px;
            border-radius: 5px;
            box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.1);
        }

        .minesweeper-game {
            background-color: #fff;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.1);
        }

        .navbar {
            background-color: #fff;
        }

            .navbar .navbar-nav .nav-link {
                color: white;
            }

                .navbar .navbar-nav .nav-link:hover {
                    color: #007bff;
                }

            .navbar .navbar-brand {
                color: white;
            }

                .navbar .navbar-brand:hover {
                    color: #007bff;
                }

            .navbar .dropdown-menu {
                background-color: black;
            }

                .navbar .dropdown-menu .dropdown-item {
                    color: white;
                }

                    .navbar .dropdown-menu .dropdown-item:hover {
                        color: blue;
                    }
    </style>
</head>
<body>
    <div class="container mt-5">
        <!-- Added top margin -->
        <div class="row justify-content-between">
            <div class="col-md-4 mb-4 order-1">
                <div class="scoreboard-container">
                    <div class="scoreboard">
                        <h4 class="text-center">Scoreboard</h4>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Player</th>
                                    <th>Score</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>1</td>
                                    <td>Player 1</td>
                                    <td>100</td>
                                </tr>
                                <tr>
                                    <td>2</td>
                                    <td>Player 2</td>
                                    <td>90</td>
                                </tr>
                                <tr>
                                    <td>3</td>
                                    <td>Player 3</td>
                                    <td>80</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-4 order-2">
                <div class="minesweeper-container">
                    <div id="date-time" class="text-center mb-3"></div>
                    <div id="grid-container" class="grid-container">
                        @for (var i = 0; i < Model.Count; i++)
                        {
                            <div class="cell @(Model[i].IsRevealed ? "revealed" : "")"
                                 data-mine="@Model[i].IsMine.ToString().ToLower()"
                                 onclick="if (!this.classList.contains('revealed')) revealCell(@i)">
                                @if (Model[i].IsRevealed && !Model[i].IsMine && Model[i].NeighboringMines > 0)
                                {
                                    <span class="neighboring-mines">@Model[i].NeighboringMines</span>
                                }
                            </div>
                        }
                    </div>

                    <div class="d-flex justify-content-between mt-3">
                        <button class="btn btn-primary mr-2" onclick="resetBoard()">Reset Board</button>
                        <button class="btn btn-primary mr-2" onclick="saveGame()">Save</button>
                        <button class="btn btn-primary mr-2" onclick="loadGame()">Load Game</button>
                        <button class="btn btn-primary" onclick="displayAllCells()">Display Cells</button>
                    </div>

                </div>
            </div>
            <div class="col-md-4 mb-4 order-3">
                <div class="rules-container">
                    <div class="scoreboard">
                        <h4 class="text-center">Rules</h4>
                        <ul>
                            <li>Click on a cell to reveal it.</li>
                            <li>If the cell contains a mine, the game is over.</li>
                            <li>If the cell is empty, it will reveal neighboring cells.</li>
                            <li>The numbers indicate how many mines are adjacent to that cell.</li>
                            <li>Use logic to determine which cells contain mines and mark them with a flag.</li>
                            <li>Win by revealing all cells that do not contain mines.</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="success-message" style="display: none;">Congratulations! You have succeeded!</div>

    <script>
        var displayMines = false;

        function resetBoard() {
            fetch('@Url.Action("ResetBoard", "Minesweeper")', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    updateBoard(data.cells);
                    updateDateTime(data.dateTime);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        function updateBoard(cells) {
            const gridContainer = document.getElementById("grid-container");
            gridContainer.innerHTML = '';
            cells.forEach((cell, index) => {
                const cellElement = document.createElement("div");
                cellElement.className = "cell" + (cell.isRevealed ? " revealed" : "");
                cellElement.dataset.mine = cell.isMine.toString().toLowerCase();
                cellElement.onclick = function () {
                    if (!cellElement.classList.contains('revealed')) {
                        revealCell(index);
                    }
                };
                if (cell.isRevealed && !cell.isMine && cell.neighboringMines > 0) {
                    const spanElement = document.createElement("span");
                    spanElement.className = "neighboring-mines";
                    spanElement.textContent = cell.neighboringMines;
                    cellElement.appendChild(spanElement);
                }
                gridContainer.appendChild(cellElement);
            });
        }

        function updateDateTime(dateTime) {
            document.getElementById('date-time').innerText = dateTime;
        }

        function revealCell(cellIndex) {
            var cell = document.getElementsByClassName("cell")[cellIndex];
            if (cell.textContent.trim() !== "") {
                return;
            }

            fetch('@Url.Action("HandleCellClick", "Minesweeper")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ cellIndex: cellIndex })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.gameOver) {
                        if (confirm("Game Over! You hit a mine. Do you want to reset the board?")) {
                            resetBoard();
                        }
                    } else {
                        updateBoard(data.cells);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        function displayAllCells() {
            var cells = document.getElementsByClassName("cell");
            for (var i = 0; i < cells.length; i++) {
                cells[i].classList.add("revealed");
            }
            displayMines = true;
        }

        document.querySelectorAll('.cell').forEach(item => {
            item.addEventListener('click', event => {
                if (displayMines && item.classList.contains('mine')) {
                    item.classList.add('revealed');
                    alert("Game Over! You clicked on a mine!");
                    resetBoard();
                } else {
                    revealCell(Array.prototype.indexOf.call(item.parentElement.children, item));
                }
            });
        });

        function displayDateTime() {
            fetch('@Url.Action("ResetBoard", "Minesweeper")', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    updateDateTime(data.dateTime);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        function saveGame() {
            fetch('@Url.Action("SaveGame", "Minesweeper")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ /* Include any required data to save */ })
            })
                .then(response => response.json())
                .then(data => {
                    alert(data.message);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        function loadGame() {
            console.log("Loading game...");
        }
        displayDateTime();

    </script>

    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js" integrity="sha384-pzjw8f+HoX8Ktv5z+Po0iSfka0V6twP1Au5gE2FndcwY6pYFq3e6e+p2EKzI1zzi" crossorigin="anonymous"></script>
</body>
</html>
